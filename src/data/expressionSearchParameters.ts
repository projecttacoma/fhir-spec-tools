// Taken from https://hl7.org/fhir/R4/search-parameters.json
// Maps expressions to their search parameter code
export const ExpressionSearchMap: Record<string, string | undefined> = {
  'Resource.id': '_id',
  'Resource.meta.lastUpdated': '_lastUpdated',
  'Resource.meta.profile': '_profile',
  'Resource.meta.security': '_security',
  'Resource.meta.source': '_source',
  'Resource.meta.tag': '_tag',
  'Account.identifier': 'identifier',
  'Account.name': 'name',
  'Account.owner': 'owner',
  'Account.subject.where(resolve() is Patient)': 'patient',
  'Account.servicePeriod': 'period',
  'Account.status': 'status',
  'Account.subject': 'subject',
  'Account.type': 'type',
  "ActivityDefinition.relatedArtifact.where(type='composed-of').resource": 'composed-of',
  '(ActivityDefinition.useContext.value as CodeableConcept)': 'context',
  '(ActivityDefinition.useContext.value as Quantity)': 'context-quantity',
  '(ActivityDefinition.useContext.value as Range)': 'context-quantity',
  'ActivityDefinition.useContext.code': 'context-type',
  'ActivityDefinition.date': 'date',
  "ActivityDefinition.relatedArtifact.where(type='depends-on').resource": 'depends-on',
  'ActivityDefinition.library': 'depends-on',
  "ActivityDefinition.relatedArtifact.where(type='derived-from').resource": 'derived-from',
  'ActivityDefinition.description': 'description',
  'ActivityDefinition.effectivePeriod': 'effective',
  'ActivityDefinition.identifier': 'identifier',
  'ActivityDefinition.jurisdiction': 'jurisdiction',
  'ActivityDefinition.name': 'name',
  "ActivityDefinition.relatedArtifact.where(type='predecessor').resource": 'predecessor',
  'ActivityDefinition.publisher': 'publisher',
  'ActivityDefinition.status': 'status',
  "ActivityDefinition.relatedArtifact.where(type='successor').resource": 'successor',
  'ActivityDefinition.title': 'title',
  'ActivityDefinition.topic': 'topic',
  'ActivityDefinition.url': 'url',
  'ActivityDefinition.version': 'version',
  'ActivityDefinition.useContext': 'context-type-value',
  'AdverseEvent.actuality': 'actuality',
  'AdverseEvent.category': 'category',
  'AdverseEvent.date': 'date',
  'AdverseEvent.event': 'event',
  'AdverseEvent.location': 'location',
  'AdverseEvent.recorder': 'recorder',
  'AdverseEvent.resultingCondition': 'resultingcondition',
  'AdverseEvent.seriousness': 'seriousness',
  'AdverseEvent.severity': 'severity',
  'AdverseEvent.study': 'study',
  'AdverseEvent.subject': 'subject',
  'AdverseEvent.suspectEntity.instance': 'substance',
  'AllergyIntolerance.asserter': 'asserter',
  'AllergyIntolerance.category': 'category',
  'AllergyIntolerance.clinicalStatus': 'clinical-status',
  'AllergyIntolerance.code': 'code',
  'AllergyIntolerance.reaction.substance': 'code',
  'Condition.code': 'code',
  '(DeviceRequest.code as CodeableConcept)': 'code',
  'DiagnosticReport.code': 'code',
  'FamilyMemberHistory.condition.code': 'code',
  'List.code': 'code',
  'Medication.code': 'code',
  '(MedicationAdministration.medication as CodeableConcept)': 'code',
  '(MedicationDispense.medication as CodeableConcept)': 'code',
  '(MedicationRequest.medication as CodeableConcept)': 'code',
  '(MedicationStatement.medication as CodeableConcept)': 'code',
  'Observation.code': 'combo-code',
  'Procedure.code': 'code',
  'ServiceRequest.code': 'code',
  'AllergyIntolerance.criticality': 'criticality',
  'AllergyIntolerance.recordedDate': 'date',
  'CarePlan.period': 'date',
  'CareTeam.period': 'date',
  'ClinicalImpression.date': 'date',
  'Composition.date': 'date',
  'Consent.dateTime': 'date',
  'DiagnosticReport.effective': 'date',
  'Encounter.period': 'date',
  'EpisodeOfCare.period': 'date',
  'FamilyMemberHistory.date': 'date',
  'Flag.period': 'date',
  'Immunization.occurrence': 'date',
  'List.date': 'date',
  'Observation.effective': 'date',
  'Procedure.performed': 'date',
  '(RiskAssessment.occurrence as dateTime)': 'date',
  'SupplyRequest.authoredOn': 'date',
  'AllergyIntolerance.identifier': 'identifier',
  'CarePlan.identifier': 'identifier',
  'CareTeam.identifier': 'identifier',
  'Composition.identifier': 'identifier',
  'Condition.identifier': 'identifier',
  'Consent.identifier': 'identifier',
  'DetectedIssue.identifier': 'identifier',
  'DeviceRequest.identifier': 'identifier',
  'DiagnosticReport.identifier': 'identifier',
  'DocumentManifest.masterIdentifier': 'identifier',
  'DocumentManifest.identifier': 'identifier',
  'DocumentReference.masterIdentifier': 'identifier',
  'DocumentReference.identifier': 'identifier',
  'Encounter.identifier': 'identifier',
  'EpisodeOfCare.identifier': 'identifier',
  'FamilyMemberHistory.identifier': 'identifier',
  'Goal.identifier': 'identifier',
  'ImagingStudy.identifier': 'identifier',
  'Immunization.identifier': 'identifier',
  'List.identifier': 'identifier',
  'MedicationAdministration.identifier': 'identifier',
  'MedicationDispense.identifier': 'identifier',
  'MedicationRequest.identifier': 'identifier',
  'MedicationStatement.identifier': 'identifier',
  'NutritionOrder.identifier': 'identifier',
  'Observation.identifier': 'identifier',
  'Procedure.identifier': 'identifier',
  'RiskAssessment.identifier': 'identifier',
  'ServiceRequest.identifier': 'identifier',
  'SupplyDelivery.identifier': 'identifier',
  'SupplyRequest.identifier': 'identifier',
  'VisionPrescription.identifier': 'identifier',
  'AllergyIntolerance.lastOccurrence': 'last-date',
  'AllergyIntolerance.reaction.manifestation': 'manifestation',
  'AllergyIntolerance.reaction.onset': 'onset',
  'AllergyIntolerance.patient': 'patient',
  'CarePlan.subject.where(resolve() is Patient)': 'patient',
  'CareTeam.subject.where(resolve() is Patient)': 'patient',
  'ClinicalImpression.subject.where(resolve() is Patient)': 'patient',
  'Composition.subject.where(resolve() is Patient)': 'patient',
  'Condition.subject.where(resolve() is Patient)': 'patient',
  'Consent.patient': 'patient',
  'DetectedIssue.patient': 'patient',
  'DeviceRequest.subject.where(resolve() is Patient)': 'patient',
  'DeviceUseStatement.subject': 'subject',
  'DiagnosticReport.subject.where(resolve() is Patient)': 'patient',
  'DocumentManifest.subject.where(resolve() is Patient)': 'patient',
  'DocumentReference.subject.where(resolve() is Patient)': 'patient',
  'Encounter.subject.where(resolve() is Patient)': 'patient',
  'EpisodeOfCare.patient': 'patient',
  'FamilyMemberHistory.patient': 'patient',
  'Flag.subject.where(resolve() is Patient)': 'patient',
  'Goal.subject.where(resolve() is Patient)': 'patient',
  'ImagingStudy.subject.where(resolve() is Patient)': 'patient',
  'Immunization.patient': 'patient',
  'List.subject.where(resolve() is Patient)': 'patient',
  'MedicationAdministration.subject.where(resolve() is Patient)': 'patient',
  'MedicationDispense.subject.where(resolve() is Patient)': 'patient',
  'MedicationRequest.subject.where(resolve() is Patient)': 'patient',
  'MedicationStatement.subject.where(resolve() is Patient)': 'patient',
  'NutritionOrder.patient': 'patient',
  'Observation.subject.where(resolve() is Patient)': 'patient',
  'Procedure.subject.where(resolve() is Patient)': 'patient',
  'RiskAssessment.subject.where(resolve() is Patient)': 'patient',
  'ServiceRequest.subject.where(resolve() is Patient)': 'patient',
  'SupplyDelivery.patient': 'patient',
  'VisionPrescription.patient': 'patient',
  'AllergyIntolerance.recorder': 'recorder',
  'AllergyIntolerance.reaction.exposureRoute': 'route',
  'AllergyIntolerance.reaction.severity': 'severity',
  'AllergyIntolerance.type': 'type',
  'Composition.type': 'type',
  'DocumentManifest.type': 'type',
  'DocumentReference.type': 'type',
  'Encounter.type': 'type',
  'EpisodeOfCare.type': 'type',
  'AllergyIntolerance.verificationStatus': 'verification-status',
  'Appointment.participant.actor': 'actor',
  'Appointment.appointmentType': 'appointment-type',
  'Appointment.basedOn': 'based-on',
  'Appointment.start': 'date',
  'Appointment.identifier': 'identifier',
  'Appointment.participant.actor.where(resolve() is Location)': 'location',
  'Appointment.participant.status': 'part-status',
  'Appointment.participant.actor.where(resolve() is Patient)': 'patient',
  'Appointment.participant.actor.where(resolve() is Practitioner)': 'practitioner',
  'Appointment.reasonCode': 'reason-code',
  'Appointment.reasonReference': 'reason-reference',
  'Appointment.serviceCategory': 'service-category',
  'Appointment.serviceType': 'service-type',
  'Appointment.slot': 'slot',
  'Appointment.specialty': 'specialty',
  'Appointment.status': 'status',
  'Appointment.supportingInformation': 'supporting-info',
  'AppointmentResponse.actor': 'actor',
  'AppointmentResponse.appointment': 'appointment',
  'AppointmentResponse.identifier': 'identifier',
  'AppointmentResponse.actor.where(resolve() is Location)': 'location',
  'AppointmentResponse.participantStatus': 'part-status',
  'AppointmentResponse.actor.where(resolve() is Patient)': 'patient',
  'AppointmentResponse.actor.where(resolve() is Practitioner)': 'practitioner',
  'AuditEvent.action': 'action',
  'AuditEvent.agent.network.address': 'address',
  'AuditEvent.agent.who': 'agent',
  'AuditEvent.agent.name': 'agent-name',
  'AuditEvent.agent.role': 'agent-role',
  'AuditEvent.agent.altId': 'altid',
  'AuditEvent.recorded': 'date',
  'AuditEvent.entity.what': 'entity',
  'AuditEvent.entity.name': 'entity-name',
  'AuditEvent.entity.role': 'entity-role',
  'AuditEvent.entity.type': 'entity-type',
  'AuditEvent.outcome': 'outcome',
  'AuditEvent.agent.who.where(resolve() is Patient)': 'patient',
  'AuditEvent.entity.what.where(resolve() is Patient)': 'patient',
  'AuditEvent.agent.policy': 'policy',
  'AuditEvent.source.site': 'site',
  'AuditEvent.source.observer': 'source',
  'AuditEvent.subtype': 'subtype',
  'AuditEvent.type': 'type',
  'Basic.author': 'author',
  'Basic.code': 'code',
  'Basic.created': 'created',
  'Basic.identifier': 'identifier',
  'Basic.subject.where(resolve() is Patient)': 'patient',
  'Basic.subject': 'subject',
  'BodyStructure.identifier': 'identifier',
  'BodyStructure.location': 'location',
  'BodyStructure.morphology': 'morphology',
  'BodyStructure.patient': 'patient',
  'Bundle.entry[0].resource': 'message',
  'Bundle.identifier': 'identifier',
  'Bundle.timestamp': 'timestamp',
  'Bundle.type': 'type',
  '(CapabilityStatement.useContext.value as CodeableConcept)': 'context',
  '(CodeSystem.useContext.value as CodeableConcept)': 'context',
  '(CompartmentDefinition.useContext.value as CodeableConcept)': 'context',
  '(ConceptMap.useContext.value as CodeableConcept)': 'context',
  '(GraphDefinition.useContext.value as CodeableConcept)': 'context',
  '(ImplementationGuide.useContext.value as CodeableConcept)': 'context',
  '(MessageDefinition.useContext.value as CodeableConcept)': 'context',
  '(NamingSystem.useContext.value as CodeableConcept)': 'context',
  '(OperationDefinition.useContext.value as CodeableConcept)': 'context',
  '(SearchParameter.useContext.value as CodeableConcept)': 'context',
  '(StructureDefinition.useContext.value as CodeableConcept)': 'context',
  '(StructureMap.useContext.value as CodeableConcept)': 'context',
  '(TerminologyCapabilities.useContext.value as CodeableConcept)': 'context',
  '(ValueSet.useContext.value as CodeableConcept)': 'context',
  '(CapabilityStatement.useContext.value as Quantity)': 'context-quantity',
  '(CapabilityStatement.useContext.value as Range)': 'context-quantity',
  '(CodeSystem.useContext.value as Quantity)': 'context-quantity',
  '(CodeSystem.useContext.value as Range)': 'context-quantity',
  '(CompartmentDefinition.useContext.value as Quantity)': 'context-quantity',
  '(CompartmentDefinition.useContext.value as Range)': 'context-quantity',
  '(ConceptMap.useContext.value as Quantity)': 'context-quantity',
  '(ConceptMap.useContext.value as Range)': 'context-quantity',
  '(GraphDefinition.useContext.value as Quantity)': 'context-quantity',
  '(GraphDefinition.useContext.value as Range)': 'context-quantity',
  '(ImplementationGuide.useContext.value as Quantity)': 'context-quantity',
  '(ImplementationGuide.useContext.value as Range)': 'context-quantity',
  '(MessageDefinition.useContext.value as Quantity)': 'context-quantity',
  '(MessageDefinition.useContext.value as Range)': 'context-quantity',
  '(NamingSystem.useContext.value as Quantity)': 'context-quantity',
  '(NamingSystem.useContext.value as Range)': 'context-quantity',
  '(OperationDefinition.useContext.value as Quantity)': 'context-quantity',
  '(OperationDefinition.useContext.value as Range)': 'context-quantity',
  '(SearchParameter.useContext.value as Quantity)': 'context-quantity',
  '(SearchParameter.useContext.value as Range)': 'context-quantity',
  '(StructureDefinition.useContext.value as Quantity)': 'context-quantity',
  '(StructureDefinition.useContext.value as Range)': 'context-quantity',
  '(StructureMap.useContext.value as Quantity)': 'context-quantity',
  '(StructureMap.useContext.value as Range)': 'context-quantity',
  '(TerminologyCapabilities.useContext.value as Quantity)': 'context-quantity',
  '(TerminologyCapabilities.useContext.value as Range)': 'context-quantity',
  '(ValueSet.useContext.value as Quantity)': 'context-quantity',
  '(ValueSet.useContext.value as Range)': 'context-quantity',
  'CapabilityStatement.useContext.code': 'context-type',
  'CodeSystem.useContext.code': 'context-type',
  'CompartmentDefinition.useContext.code': 'context-type',
  'ConceptMap.useContext.code': 'context-type',
  'GraphDefinition.useContext.code': 'context-type',
  'ImplementationGuide.useContext.code': 'context-type',
  'MessageDefinition.useContext.code': 'context-type',
  'NamingSystem.useContext.code': 'context-type',
  'OperationDefinition.useContext.code': 'context-type',
  'SearchParameter.useContext.code': 'context-type',
  'StructureDefinition.useContext.code': 'context-type',
  'StructureMap.useContext.code': 'context-type',
  'TerminologyCapabilities.useContext.code': 'context-type',
  'ValueSet.useContext.code': 'context-type',
  'CapabilityStatement.date': 'date',
  'CodeSystem.date': 'date',
  'CompartmentDefinition.date': 'date',
  'ConceptMap.date': 'date',
  'GraphDefinition.date': 'date',
  'ImplementationGuide.date': 'date',
  'MessageDefinition.date': 'date',
  'NamingSystem.date': 'date',
  'OperationDefinition.date': 'date',
  'SearchParameter.date': 'date',
  'StructureDefinition.date': 'date',
  'StructureMap.date': 'date',
  'TerminologyCapabilities.date': 'date',
  'ValueSet.date': 'date',
  'CapabilityStatement.description': 'description',
  'CodeSystem.description': 'description',
  'CompartmentDefinition.description': 'description',
  'ConceptMap.description': 'description',
  'GraphDefinition.description': 'description',
  'ImplementationGuide.description': 'description',
  'MessageDefinition.description': 'description',
  'NamingSystem.description': 'description',
  'OperationDefinition.description': 'description',
  'SearchParameter.description': 'description',
  'StructureDefinition.description': 'description',
  'StructureMap.description': 'description',
  'TerminologyCapabilities.description': 'description',
  'ValueSet.description': 'description',
  'CapabilityStatement.version': 'version',
  'CapabilityStatement.format': 'format',
  'CapabilityStatement.implementationGuide': 'guide',
  'CapabilityStatement.jurisdiction': 'jurisdiction',
  'CodeSystem.jurisdiction': 'jurisdiction',
  'ConceptMap.jurisdiction': 'jurisdiction',
  'GraphDefinition.jurisdiction': 'jurisdiction',
  'ImplementationGuide.jurisdiction': 'jurisdiction',
  'MessageDefinition.jurisdiction': 'jurisdiction',
  'NamingSystem.jurisdiction': 'jurisdiction',
  'OperationDefinition.jurisdiction': 'jurisdiction',
  'SearchParameter.jurisdiction': 'jurisdiction',
  'StructureDefinition.jurisdiction': 'jurisdiction',
  'StructureMap.jurisdiction': 'jurisdiction',
  'TerminologyCapabilities.jurisdiction': 'jurisdiction',
  'ValueSet.jurisdiction': 'jurisdiction',
  'CapabilityStatement.rest.mode': 'mode',
  'CapabilityStatement.name': 'name',
  'CodeSystem.name': 'name',
  'CompartmentDefinition.name': 'name',
  'ConceptMap.name': 'name',
  'GraphDefinition.name': 'name',
  'ImplementationGuide.name': 'name',
  'MessageDefinition.name': 'name',
  'NamingSystem.name': 'name',
  'OperationDefinition.name': 'name',
  'SearchParameter.name': 'name',
  'StructureDefinition.name': 'name',
  'StructureMap.name': 'name',
  'TerminologyCapabilities.name': 'name',
  'ValueSet.name': 'name',
  'CapabilityStatement.publisher': 'publisher',
  'CodeSystem.publisher': 'publisher',
  'CompartmentDefinition.publisher': 'publisher',
  'ConceptMap.publisher': 'publisher',
  'GraphDefinition.publisher': 'publisher',
  'ImplementationGuide.publisher': 'publisher',
  'MessageDefinition.publisher': 'publisher',
  'NamingSystem.publisher': 'publisher',
  'OperationDefinition.publisher': 'publisher',
  'SearchParameter.publisher': 'publisher',
  'StructureDefinition.publisher': 'publisher',
  'StructureMap.publisher': 'publisher',
  'TerminologyCapabilities.publisher': 'publisher',
  'ValueSet.publisher': 'publisher',
  'CapabilityStatement.rest.resource.type': 'resource',
  'CapabilityStatement.rest.resource.profile': 'resource-profile',
  'CapabilityStatement.rest.security.service': 'security-service',
  'CapabilityStatement.software.name': 'software',
  'CapabilityStatement.status': 'status',
  'CodeSystem.status': 'status',
  'CompartmentDefinition.status': 'status',
  'ConceptMap.status': 'status',
  'GraphDefinition.status': 'status',
  'ImplementationGuide.status': 'status',
  'MessageDefinition.status': 'status',
  'NamingSystem.status': 'status',
  'OperationDefinition.status': 'status',
  'SearchParameter.status': 'status',
  'StructureDefinition.status': 'status',
  'StructureMap.status': 'status',
  'TerminologyCapabilities.status': 'status',
  'ValueSet.status': 'status',
  'CapabilityStatement.rest.resource.supportedProfile': 'supported-profile',
  'CapabilityStatement.title': 'title',
  'CodeSystem.title': 'title',
  'ConceptMap.title': 'title',
  'ImplementationGuide.title': 'title',
  'MessageDefinition.title': 'title',
  'OperationDefinition.title': 'title',
  'StructureDefinition.title': 'title',
  'StructureMap.title': 'title',
  'TerminologyCapabilities.title': 'title',
  'ValueSet.title': 'title',
  'CapabilityStatement.url': 'url',
  'CodeSystem.url': 'system',
  'CompartmentDefinition.url': 'url',
  'ConceptMap.url': 'url',
  'GraphDefinition.url': 'url',
  'ImplementationGuide.url': 'url',
  'MessageDefinition.url': 'url',
  'OperationDefinition.url': 'url',
  'SearchParameter.url': 'url',
  'StructureDefinition.url': 'url',
  'StructureMap.url': 'url',
  'TerminologyCapabilities.url': 'url',
  'ValueSet.url': 'url',
  'CodeSystem.version': 'version',
  'CompartmentDefinition.version': 'version',
  'ConceptMap.version': 'version',
  'GraphDefinition.version': 'version',
  'ImplementationGuide.version': 'version',
  'MessageDefinition.version': 'version',
  'OperationDefinition.version': 'version',
  'SearchParameter.version': 'version',
  'StructureDefinition.version': 'version',
  'StructureMap.version': 'version',
  'TerminologyCapabilities.version': 'version',
  'ValueSet.version': 'version',
  'CapabilityStatement.useContext': 'context-type-value',
  'CodeSystem.useContext': 'context-type-value',
  'CompartmentDefinition.useContext': 'context-type-value',
  'ConceptMap.useContext': 'context-type-value',
  'GraphDefinition.useContext': 'context-type-value',
  'ImplementationGuide.useContext': 'context-type-value',
  'MessageDefinition.useContext': 'context-type-value',
  'NamingSystem.useContext': 'context-type-value',
  'OperationDefinition.useContext': 'context-type-value',
  'SearchParameter.useContext': 'context-type-value',
  'StructureDefinition.useContext': 'context-type-value',
  'StructureMap.useContext': 'context-type-value',
  'TerminologyCapabilities.useContext': 'context-type-value',
  'ValueSet.useContext': 'context-type-value',
  'CarePlan.activity.detail.code': 'activity-code',
  'CarePlan.activity.detail.scheduled': 'activity-date',
  'CarePlan.activity.reference': 'activity-reference',
  'CarePlan.basedOn': 'based-on',
  'CarePlan.careTeam': 'care-team',
  'CarePlan.category': 'category',
  'CarePlan.addresses': 'condition',
  'CarePlan.encounter': 'encounter',
  'CarePlan.goal': 'goal',
  'CarePlan.instantiatesCanonical': 'instantiates-canonical',
  'CarePlan.instantiatesUri': 'instantiates-uri',
  'CarePlan.intent': 'intent',
  'CarePlan.partOf': 'part-of',
  'CarePlan.activity.detail.performer': 'performer',
  'CarePlan.replaces': 'replaces',
  'CarePlan.status': 'status',
  'CarePlan.subject': 'subject',
  'CareTeam.category': 'category',
  'CareTeam.encounter': 'encounter',
  'CareTeam.participant.member': 'participant',
  'CareTeam.status': 'status',
  'CareTeam.subject': 'subject',
  'ChargeItem.account': 'account',
  'ChargeItem.code': 'code',
  'ChargeItem.context': 'context',
  'ChargeItem.enteredDate': 'entered-date',
  'ChargeItem.enterer': 'enterer',
  'ChargeItem.factorOverride': 'factor-override',
  'ChargeItem.identifier': 'identifier',
  'ChargeItem.occurrence': 'occurrence',
  'ChargeItem.subject.where(resolve() is Patient)': 'patient',
  'ChargeItem.performer.actor': 'performer-actor',
  'ChargeItem.performer.function': 'performer-function',
  'ChargeItem.performingOrganization': 'performing-organization',
  'ChargeItem.priceOverride': 'price-override',
  'ChargeItem.quantity': 'quantity',
  'ChargeItem.requestingOrganization': 'requesting-organization',
  'ChargeItem.service': 'service',
  'ChargeItem.subject': 'subject',
  '(ChargeItemDefinition.useContext.value as CodeableConcept)': 'context',
  '(ChargeItemDefinition.useContext.value as Quantity)': 'context-quantity',
  '(ChargeItemDefinition.useContext.value as Range)': 'context-quantity',
  'ChargeItemDefinition.useContext.code': 'context-type',
  'ChargeItemDefinition.date': 'date',
  'ChargeItemDefinition.description': 'description',
  'ChargeItemDefinition.effectivePeriod': 'effective',
  'ChargeItemDefinition.identifier': 'identifier',
  'ChargeItemDefinition.jurisdiction': 'jurisdiction',
  'ChargeItemDefinition.publisher': 'publisher',
  'ChargeItemDefinition.status': 'status',
  'ChargeItemDefinition.title': 'title',
  'ChargeItemDefinition.url': 'url',
  'ChargeItemDefinition.version': 'version',
  'ChargeItemDefinition.useContext': 'context-type-value',
  'Claim.careTeam.provider': 'care-team',
  'Claim.created': 'created',
  'Claim.item.detail.udi': 'detail-udi',
  'Claim.item.encounter': 'encounter',
  'Claim.enterer': 'enterer',
  'Claim.facility': 'facility',
  'Claim.identifier': 'identifier',
  'Claim.insurer': 'insurer',
  'Claim.item.udi': 'item-udi',
  'Claim.patient': 'patient',
  'Claim.payee.party': 'payee',
  'Claim.priority': 'priority',
  'Claim.procedure.udi': 'procedure-udi',
  'Claim.provider': 'provider',
  'Claim.status': 'status',
  'Claim.item.detail.subDetail.udi': 'subdetail-udi',
  'Claim.use': 'use',
  'ClaimResponse.created': 'created',
  'ClaimResponse.disposition': 'disposition',
  'ClaimResponse.identifier': 'identifier',
  'ClaimResponse.insurer': 'insurer',
  'ClaimResponse.outcome': 'outcome',
  'ClaimResponse.patient': 'patient',
  'ClaimResponse.payment.date': 'payment-date',
  'ClaimResponse.request': 'request',
  'ClaimResponse.requestor': 'requestor',
  'ClaimResponse.status': 'status',
  'ClaimResponse.use': 'use',
  'ClinicalImpression.assessor': 'assessor',
  'ClinicalImpression.encounter': 'encounter',
  'ClinicalImpression.finding.itemCodeableConcept': 'finding-code',
  'ClinicalImpression.finding.itemReference': 'finding-ref',
  'ClinicalImpression.identifier': 'identifier',
  'ClinicalImpression.investigation.item': 'investigation',
  'ClinicalImpression.previous': 'previous',
  'ClinicalImpression.problem': 'problem',
  'ClinicalImpression.status': 'status',
  'ClinicalImpression.subject': 'subject',
  'ClinicalImpression.supportingInfo': 'supporting-info',
  'CodeSystem.concept.code': 'code',
  'CodeSystem.content': 'content-mode',
  'CodeSystem.identifier': 'identifier',
  'ConceptMap.identifier': 'identifier',
  'MessageDefinition.identifier': 'identifier',
  'StructureDefinition.identifier': 'identifier',
  'StructureMap.identifier': 'identifier',
  'ValueSet.identifier': 'identifier',
  'CodeSystem.concept.designation.language': 'language',
  'CodeSystem.supplements': 'supplements',
  'Communication.basedOn': 'based-on',
  'Communication.category': 'category',
  'Communication.encounter': 'encounter',
  'Communication.identifier': 'identifier',
  'Communication.instantiatesCanonical': 'instantiates-canonical',
  'Communication.instantiatesUri': 'instantiates-uri',
  'Communication.medium': 'medium',
  'Communication.partOf': 'part-of',
  'Communication.subject.where(resolve() is Patient)': 'patient',
  'Communication.received': 'received',
  'Communication.recipient': 'recipient',
  'Communication.sender': 'sender',
  'Communication.sent': 'sent',
  'Communication.status': 'status',
  'Communication.subject': 'subject',
  'CommunicationRequest.authoredOn': 'authored',
  'CommunicationRequest.basedOn': 'based-on',
  'CommunicationRequest.category': 'category',
  'CommunicationRequest.encounter': 'encounter',
  'CommunicationRequest.groupIdentifier': 'group-identifier',
  'CommunicationRequest.identifier': 'identifier',
  'CommunicationRequest.medium': 'medium',
  '(CommunicationRequest.occurrence as dateTime)': 'occurrence',
  'CommunicationRequest.subject.where(resolve() is Patient)': 'patient',
  'CommunicationRequest.priority': 'priority',
  'CommunicationRequest.recipient': 'recipient',
  'CommunicationRequest.replaces': 'replaces',
  'CommunicationRequest.requester': 'requester',
  'CommunicationRequest.sender': 'sender',
  'CommunicationRequest.status': 'status',
  'CommunicationRequest.subject': 'subject',
  'CompartmentDefinition.code': 'code',
  'CompartmentDefinition.resource.code': 'resource',
  'Composition.attester.party': 'attester',
  'Composition.author': 'author',
  'Composition.category': 'category',
  'Composition.confidentiality': 'confidentiality',
  'Composition.event.code': 'context',
  'Composition.encounter': 'encounter',
  'DeviceRequest.encounter': 'encounter',
  'DiagnosticReport.encounter': 'encounter',
  'DocumentReference.context.encounter': 'encounter',
  'Flag.encounter': 'encounter',
  'List.encounter': 'encounter',
  'NutritionOrder.encounter': 'encounter',
  'Observation.encounter': 'encounter',
  'Procedure.encounter': 'encounter',
  'RiskAssessment.encounter': 'encounter',
  'ServiceRequest.encounter': 'encounter',
  'VisionPrescription.encounter': 'encounter',
  'Composition.section.entry': 'entry',
  'Composition.event.period': 'period',
  '(Composition.relatesTo.target as Identifier)': 'related-id',
  '(Composition.relatesTo.target as Reference)': 'related-ref',
  'Composition.section.code': 'section',
  'Composition.status': 'status',
  'Composition.subject': 'subject',
  'Composition.title': 'title',
  'ConceptMap.group.element.target.dependsOn.property': 'dependson',
  'ConceptMap.group.unmapped.url': 'other',
  'ConceptMap.group.element.target.product.property': 'product',
  '(ConceptMap.source as canonical)': 'source',
  'ConceptMap.group.element.code': 'source-code',
  'ConceptMap.group.source': 'source-system',
  '(ConceptMap.source as uri)': 'source-uri',
  '(ConceptMap.target as canonical)': 'target',
  'ConceptMap.group.element.target.code': 'target-code',
  'ConceptMap.group.target': 'target-system',
  '(ConceptMap.target as uri)': 'target-uri',
  'Condition.abatement.as(Age)': 'abatement-age',
  'Condition.abatement.as(Range)': 'abatement-age',
  'Condition.abatement.as(dateTime)': 'abatement-date',
  'Condition.abatement.as(Period)': 'abatement-date',
  'Condition.abatement.as(string)': 'abatement-string',
  'Condition.asserter': 'asserter',
  'Condition.bodySite': 'body-site',
  'Condition.category': 'category',
  'Condition.clinicalStatus': 'clinical-status',
  'Condition.encounter': 'encounter',
  'Condition.evidence.code': 'evidence',
  'Condition.evidence.detail': 'evidence-detail',
  'Condition.onset.as(Age)': 'onset-age',
  'Condition.onset.as(Range)': 'onset-age',
  'Condition.onset.as(dateTime)': 'onset-date',
  'Condition.onset.as(Period)': 'onset-date',
  'Condition.onset.as(string)': 'onset-info',
  'Condition.recordedDate': 'recorded-date',
  'Condition.severity': 'severity',
  'Condition.stage.summary': 'stage',
  'Condition.subject': 'subject',
  'Condition.verificationStatus': 'verification-status',
  'Consent.provision.action': 'action',
  'Consent.provision.actor.reference': 'actor',
  'Consent.category': 'category',
  'Consent.performer': 'consentor',
  'Consent.provision.data.reference': 'data',
  'Consent.organization': 'organization',
  'Consent.provision.period': 'period',
  'Consent.provision.purpose': 'purpose',
  'Consent.scope': 'scope',
  'Consent.provision.securityLabel': 'security-label',
  'Consent.source': 'source-reference',
  'Consent.status': 'status',
  'Contract.authority': 'authority',
  'Contract.domain': 'domain',
  'Contract.identifier': 'identifier',
  'Contract.instantiatesUri': 'instantiates',
  'Contract.issued': 'issued',
  'Contract.subject.where(resolve() is Patient)': 'patient',
  'Contract.signer.party': 'signer',
  'Contract.status': 'status',
  'Contract.subject': 'subject',
  'Contract.url': 'url',
  'Coverage.beneficiary': 'patient',
  'Coverage.class.type': 'class-type',
  'Coverage.class.value': 'class-value',
  'Coverage.dependent': 'dependent',
  'Coverage.identifier': 'identifier',
  'Coverage.payor': 'payor',
  'Coverage.policyHolder': 'policy-holder',
  'Coverage.status': 'status',
  'Coverage.subscriber': 'subscriber',
  'Coverage.type': 'type',
  'CoverageEligibilityRequest.created': 'created',
  'CoverageEligibilityRequest.enterer': 'enterer',
  'CoverageEligibilityRequest.facility': 'facility',
  'CoverageEligibilityRequest.identifier': 'identifier',
  'CoverageEligibilityRequest.patient': 'patient',
  'CoverageEligibilityRequest.provider': 'provider',
  'CoverageEligibilityRequest.status': 'status',
  'CoverageEligibilityResponse.created': 'created',
  'CoverageEligibilityResponse.disposition': 'disposition',
  'CoverageEligibilityResponse.identifier': 'identifier',
  'CoverageEligibilityResponse.insurer': 'insurer',
  'CoverageEligibilityResponse.outcome': 'outcome',
  'CoverageEligibilityResponse.patient': 'patient',
  'CoverageEligibilityResponse.request': 'request',
  'CoverageEligibilityResponse.requestor': 'requestor',
  'CoverageEligibilityResponse.status': 'status',
  'DetectedIssue.author': 'author',
  'DetectedIssue.code': 'code',
  'DetectedIssue.identified': 'identified',
  'DetectedIssue.implicated': 'implicated',
  'Device.deviceName.name': 'device-name',
  'Device.type.coding.display': 'device-name',
  'Device.type.text': 'device-name',
  'Device.identifier': 'identifier',
  'Device.location': 'location',
  'Device.manufacturer': 'manufacturer',
  'Device.modelNumber': 'model',
  'Device.owner': 'organization',
  'Device.patient': 'patient',
  'Device.status': 'status',
  'Device.type': 'type',
  'Device.udiCarrier.carrierHRF': 'udi-carrier',
  'Device.udiCarrier.deviceIdentifier': 'udi-di',
  'Device.url': 'url',
  'DeviceDefinition.identifier': 'identifier',
  'DeviceDefinition.parentDevice': 'parent',
  'DeviceDefinition.type': 'type',
  'DeviceMetric.category': 'category',
  'DeviceMetric.identifier': 'identifier',
  'DeviceMetric.parent': 'parent',
  'DeviceMetric.source': 'source',
  'DeviceMetric.type': 'type',
  'DeviceRequest.authoredOn': 'authored-on',
  'DeviceRequest.basedOn': 'based-on',
  '(DeviceRequest.code as Reference)': 'device',
  '(DeviceRequest.occurrence as dateTime)': 'event-date',
  '(DeviceRequest.occurrence as Period)': 'event-date',
  'DeviceRequest.groupIdentifier': 'group-identifier',
  'DeviceRequest.instantiatesCanonical': 'instantiates-canonical',
  'DeviceRequest.instantiatesUri': 'instantiates-uri',
  'DeviceRequest.insurance': 'insurance',
  'DeviceRequest.intent': 'intent',
  'DeviceRequest.performer': 'performer',
  'DeviceRequest.priorRequest': 'prior-request',
  'DeviceRequest.requester': 'requester',
  'DeviceRequest.status': 'status',
  'DeviceRequest.subject': 'subject',
  'DeviceUseStatement.device': 'device',
  'DeviceUseStatement.identifier': 'identifier',
  'DiagnosticReport.basedOn': 'based-on',
  'DiagnosticReport.category': 'category',
  'DiagnosticReport.conclusionCode': 'conclusion',
  'DiagnosticReport.issued': 'issued',
  'DiagnosticReport.media.link': 'media',
  'DiagnosticReport.performer': 'performer',
  'DiagnosticReport.result': 'result',
  'DiagnosticReport.resultsInterpreter': 'results-interpreter',
  'DiagnosticReport.specimen': 'specimen',
  'DiagnosticReport.status': 'status',
  'DiagnosticReport.subject': 'subject',
  'DocumentManifest.author': 'author',
  'DocumentManifest.created': 'created',
  'DocumentManifest.description': 'description',
  'DocumentManifest.content': 'item',
  'DocumentManifest.recipient': 'recipient',
  'DocumentManifest.related.identifier': 'related-id',
  'DocumentManifest.related.ref': 'related-ref',
  'DocumentManifest.source': 'source',
  'DocumentManifest.status': 'status',
  'DocumentManifest.subject': 'subject',
  'DocumentReference.authenticator': 'authenticator',
  'DocumentReference.author': 'author',
  'DocumentReference.category': 'category',
  'DocumentReference.content.attachment.contentType': 'contenttype',
  'DocumentReference.custodian': 'custodian',
  'DocumentReference.date': 'date',
  'DocumentReference.description': 'description',
  'DocumentReference.context.event': 'event',
  'DocumentReference.context.facilityType': 'facility',
  'DocumentReference.content.format': 'format',
  'DocumentReference.content.attachment.language': 'language',
  'DocumentReference.content.attachment.url': 'location',
  'DocumentReference.context.period': 'period',
  'DocumentReference.context.related': 'related',
  'DocumentReference.relatesTo.target': 'relatesto',
  'DocumentReference.relatesTo.code': 'relation',
  'DocumentReference.securityLabel': 'security-label',
  'DocumentReference.context.practiceSetting': 'setting',
  'DocumentReference.status': 'status',
  'DocumentReference.subject': 'subject',
  'DocumentReference.relatesTo': 'relationship',
  '(EffectEvidenceSynthesis.useContext.value as CodeableConcept)': 'context',
  '(EffectEvidenceSynthesis.useContext.value as Quantity)': 'context-quantity',
  '(EffectEvidenceSynthesis.useContext.value as Range)': 'context-quantity',
  'EffectEvidenceSynthesis.useContext.code': 'context-type',
  'EffectEvidenceSynthesis.date': 'date',
  'EffectEvidenceSynthesis.description': 'description',
  'EffectEvidenceSynthesis.effectivePeriod': 'effective',
  'EffectEvidenceSynthesis.identifier': 'identifier',
  'EffectEvidenceSynthesis.jurisdiction': 'jurisdiction',
  'EffectEvidenceSynthesis.name': 'name',
  'EffectEvidenceSynthesis.publisher': 'publisher',
  'EffectEvidenceSynthesis.status': 'status',
  'EffectEvidenceSynthesis.title': 'title',
  'EffectEvidenceSynthesis.url': 'url',
  'EffectEvidenceSynthesis.version': 'version',
  'EffectEvidenceSynthesis.useContext': 'context-type-value',
  'Encounter.account': 'account',
  'Encounter.appointment': 'appointment',
  'Encounter.basedOn': 'based-on',
  'Encounter.class': 'class',
  'Encounter.diagnosis.condition': 'diagnosis',
  'Encounter.episodeOfCare': 'episode-of-care',
  'Encounter.length': 'length',
  'Encounter.location.location': 'location',
  'Encounter.location.period': 'location-period',
  'Encounter.partOf': 'part-of',
  'Encounter.participant.individual': 'participant',
  'Encounter.participant.type': 'participant-type',
  'Encounter.participant.individual.where(resolve() is Practitioner)': 'practitioner',
  'Encounter.reasonCode': 'reason-code',
  'Encounter.reasonReference': 'reason-reference',
  'Encounter.serviceProvider': 'service-provider',
  'Encounter.hospitalization.specialArrangement': 'special-arrangement',
  'Encounter.status': 'status',
  'Encounter.subject': 'subject',
  'Endpoint.connectionType': 'connection-type',
  'Endpoint.identifier': 'identifier',
  'Endpoint.name': 'name',
  'Endpoint.managingOrganization': 'organization',
  'Endpoint.payloadType': 'payload-type',
  'Endpoint.status': 'status',
  'EnrollmentRequest.identifier': 'identifier',
  'EnrollmentRequest.candidate': 'subject',
  'EnrollmentRequest.status': 'status',
  'EnrollmentResponse.identifier': 'identifier',
  'EnrollmentResponse.request': 'request',
  'EnrollmentResponse.status': 'status',
  'EpisodeOfCare.careManager.where(resolve() is Practitioner)': 'care-manager',
  'EpisodeOfCare.diagnosis.condition': 'condition',
  'EpisodeOfCare.referralRequest': 'incoming-referral',
  'EpisodeOfCare.managingOrganization': 'organization',
  'EpisodeOfCare.status': 'status',
  "EventDefinition.relatedArtifact.where(type='composed-of').resource": 'composed-of',
  '(EventDefinition.useContext.value as CodeableConcept)': 'context',
  '(EventDefinition.useContext.value as Quantity)': 'context-quantity',
  '(EventDefinition.useContext.value as Range)': 'context-quantity',
  'EventDefinition.useContext.code': 'context-type',
  'EventDefinition.date': 'date',
  "EventDefinition.relatedArtifact.where(type='depends-on').resource": 'depends-on',
  "EventDefinition.relatedArtifact.where(type='derived-from').resource": 'derived-from',
  'EventDefinition.description': 'description',
  'EventDefinition.effectivePeriod': 'effective',
  'EventDefinition.identifier': 'identifier',
  'EventDefinition.jurisdiction': 'jurisdiction',
  'EventDefinition.name': 'name',
  "EventDefinition.relatedArtifact.where(type='predecessor').resource": 'predecessor',
  'EventDefinition.publisher': 'publisher',
  'EventDefinition.status': 'status',
  "EventDefinition.relatedArtifact.where(type='successor').resource": 'successor',
  'EventDefinition.title': 'title',
  'EventDefinition.topic': 'topic',
  'EventDefinition.url': 'url',
  'EventDefinition.version': 'version',
  'EventDefinition.useContext': 'context-type-value',
  "Evidence.relatedArtifact.where(type='composed-of').resource": 'composed-of',
  '(Evidence.useContext.value as CodeableConcept)': 'context',
  '(Evidence.useContext.value as Quantity)': 'context-quantity',
  '(Evidence.useContext.value as Range)': 'context-quantity',
  'Evidence.useContext.code': 'context-type',
  'Evidence.date': 'date',
  "Evidence.relatedArtifact.where(type='depends-on').resource": 'depends-on',
  "Evidence.relatedArtifact.where(type='derived-from').resource": 'derived-from',
  'Evidence.description': 'description',
  'Evidence.effectivePeriod': 'effective',
  'Evidence.identifier': 'identifier',
  'Evidence.jurisdiction': 'jurisdiction',
  'Evidence.name': 'name',
  "Evidence.relatedArtifact.where(type='predecessor').resource": 'predecessor',
  'Evidence.publisher': 'publisher',
  'Evidence.status': 'status',
  "Evidence.relatedArtifact.where(type='successor').resource": 'successor',
  'Evidence.title': 'title',
  'Evidence.topic': 'topic',
  'Evidence.url': 'url',
  'Evidence.version': 'version',
  'Evidence.useContext': 'context-type-value',
  "EvidenceVariable.relatedArtifact.where(type='composed-of').resource": 'composed-of',
  '(EvidenceVariable.useContext.value as CodeableConcept)': 'context',
  '(EvidenceVariable.useContext.value as Quantity)': 'context-quantity',
  '(EvidenceVariable.useContext.value as Range)': 'context-quantity',
  'EvidenceVariable.useContext.code': 'context-type',
  'EvidenceVariable.date': 'date',
  "EvidenceVariable.relatedArtifact.where(type='depends-on').resource": 'depends-on',
  "EvidenceVariable.relatedArtifact.where(type='derived-from').resource": 'derived-from',
  'EvidenceVariable.description': 'description',
  'EvidenceVariable.effectivePeriod': 'effective',
  'EvidenceVariable.identifier': 'identifier',
  'EvidenceVariable.jurisdiction': 'jurisdiction',
  'EvidenceVariable.name': 'name',
  "EvidenceVariable.relatedArtifact.where(type='predecessor').resource": 'predecessor',
  'EvidenceVariable.publisher': 'publisher',
  'EvidenceVariable.status': 'status',
  "EvidenceVariable.relatedArtifact.where(type='successor').resource": 'successor',
  'EvidenceVariable.title': 'title',
  'EvidenceVariable.topic': 'topic',
  'EvidenceVariable.url': 'url',
  'EvidenceVariable.version': 'version',
  'EvidenceVariable.useContext': 'context-type-value',
  '(ExampleScenario.useContext.value as CodeableConcept)': 'context',
  '(ExampleScenario.useContext.value as Quantity)': 'context-quantity',
  '(ExampleScenario.useContext.value as Range)': 'context-quantity',
  'ExampleScenario.useContext.code': 'context-type',
  'ExampleScenario.date': 'date',
  'ExampleScenario.identifier': 'identifier',
  'ExampleScenario.jurisdiction': 'jurisdiction',
  'ExampleScenario.name': 'name',
  'ExampleScenario.publisher': 'publisher',
  'ExampleScenario.status': 'status',
  'ExampleScenario.url': 'url',
  'ExampleScenario.version': 'version',
  'ExampleScenario.useContext': 'context-type-value',
  'ExplanationOfBenefit.careTeam.provider': 'care-team',
  'ExplanationOfBenefit.claim': 'claim',
  'ExplanationOfBenefit.insurance.coverage': 'coverage',
  'ExplanationOfBenefit.created': 'created',
  'ExplanationOfBenefit.item.detail.udi': 'detail-udi',
  'ExplanationOfBenefit.disposition': 'disposition',
  'ExplanationOfBenefit.item.encounter': 'encounter',
  'ExplanationOfBenefit.enterer': 'enterer',
  'ExplanationOfBenefit.facility': 'facility',
  'ExplanationOfBenefit.identifier': 'identifier',
  'ExplanationOfBenefit.item.udi': 'item-udi',
  'ExplanationOfBenefit.patient': 'patient',
  'ExplanationOfBenefit.payee.party': 'payee',
  'ExplanationOfBenefit.procedure.udi': 'procedure-udi',
  'ExplanationOfBenefit.provider': 'provider',
  'ExplanationOfBenefit.status': 'status',
  'ExplanationOfBenefit.item.detail.subDetail.udi': 'subdetail-udi',
  'FamilyMemberHistory.instantiatesCanonical': 'instantiates-canonical',
  'FamilyMemberHistory.instantiatesUri': 'instantiates-uri',
  'FamilyMemberHistory.relationship': 'relationship',
  'FamilyMemberHistory.sex': 'sex',
  'FamilyMemberHistory.status': 'status',
  'Flag.author': 'author',
  'Flag.identifier': 'identifier',
  'Flag.subject': 'subject',
  'Goal.achievementStatus': 'achievement-status',
  'Goal.category': 'category',
  'Goal.lifecycleStatus': 'lifecycle-status',
  '(Goal.start as date)': 'start-date',
  'Goal.subject': 'subject',
  '(Goal.target.due as date)': 'target-date',
  'GraphDefinition.start': 'start',
  'Group.actual': 'actual',
  'Group.characteristic.code': 'characteristic',
  'Group.code': 'code',
  'Group.characteristic.exclude': 'exclude',
  'Group.identifier': 'identifier',
  'Group.managingEntity': 'managing-entity',
  'Group.member.entity': 'member',
  'Group.type': 'type',
  '(Group.characteristic.value as CodeableConcept)': 'value',
  '(Group.characteristic.value as boolean)': 'value',
  'Group.characteristic': 'characteristic-value',
  'GuidanceResponse.identifier': 'identifier',
  'GuidanceResponse.subject.where(resolve() is Patient)': 'patient',
  'GuidanceResponse.requestIdentifier': 'request',
  'GuidanceResponse.subject': 'subject',
  'HealthcareService.active': 'active',
  'HealthcareService.characteristic': 'characteristic',
  'HealthcareService.coverageArea': 'coverage-area',
  'HealthcareService.endpoint': 'endpoint',
  'HealthcareService.identifier': 'identifier',
  'HealthcareService.location': 'location',
  'HealthcareService.name': 'name',
  'HealthcareService.providedBy': 'organization',
  'HealthcareService.program': 'program',
  'HealthcareService.category': 'service-category',
  'HealthcareService.type': 'service-type',
  'HealthcareService.specialty': 'specialty',
  'ImagingStudy.basedOn': 'basedon',
  'ImagingStudy.series.bodySite': 'bodysite',
  'ImagingStudy.series.instance.sopClass': 'dicom-class',
  'ImagingStudy.encounter': 'encounter',
  'ImagingStudy.endpoint': 'endpoint',
  'ImagingStudy.series.endpoint': 'endpoint',
  'ImagingStudy.series.instance.uid': 'instance',
  'ImagingStudy.interpreter': 'interpreter',
  'ImagingStudy.series.modality': 'modality',
  'ImagingStudy.series.performer.actor': 'performer',
  'ImagingStudy.reasonCode': 'reason',
  'ImagingStudy.referrer': 'referrer',
  'ImagingStudy.series.uid': 'series',
  'ImagingStudy.started': 'started',
  'ImagingStudy.status': 'status',
  'ImagingStudy.subject': 'subject',
  'Immunization.location': 'location',
  'Immunization.lotNumber': 'lot-number',
  'Immunization.manufacturer': 'manufacturer',
  'Immunization.performer.actor': 'performer',
  'Immunization.reaction.detail': 'reaction',
  'Immunization.reaction.date': 'reaction-date',
  'Immunization.reasonCode': 'reason-code',
  'Immunization.reasonReference': 'reason-reference',
  'Immunization.protocolApplied.series': 'series',
  'Immunization.status': 'status',
  'Immunization.statusReason': 'status-reason',
  'Immunization.protocolApplied.targetDisease': 'target-disease',
  'Immunization.vaccineCode': 'vaccine-code',
  'ImmunizationEvaluation.date': 'date',
  'ImmunizationEvaluation.doseStatus': 'dose-status',
  'ImmunizationEvaluation.identifier': 'identifier',
  'ImmunizationEvaluation.immunizationEvent': 'immunization-event',
  'ImmunizationEvaluation.patient': 'patient',
  'ImmunizationEvaluation.status': 'status',
  'ImmunizationEvaluation.targetDisease': 'target-disease',
  'ImmunizationRecommendation.date': 'date',
  'ImmunizationRecommendation.identifier': 'identifier',
  'ImmunizationRecommendation.recommendation.supportingPatientInformation': 'information',
  'ImmunizationRecommendation.patient': 'patient',
  'ImmunizationRecommendation.recommendation.forecastStatus': 'status',
  'ImmunizationRecommendation.recommendation.supportingImmunization': 'support',
  'ImmunizationRecommendation.recommendation.targetDisease': 'target-disease',
  'ImmunizationRecommendation.recommendation.vaccineCode': 'vaccine-type',
  'ImplementationGuide.dependsOn.uri': 'depends-on',
  'ImplementationGuide.experimental': 'experimental',
  'ImplementationGuide.global.profile': 'global',
  'ImplementationGuide.definition.resource.reference': 'resource',
  'InsurancePlan.contact.address': 'address',
  'InsurancePlan.contact.address.city': 'address-city',
  'InsurancePlan.contact.address.country': 'address-country',
  'InsurancePlan.contact.address.postalCode': 'address-postalcode',
  'InsurancePlan.contact.address.state': 'address-state',
  'InsurancePlan.contact.address.use': 'address-use',
  'InsurancePlan.administeredBy': 'administered-by',
  'InsurancePlan.endpoint': 'endpoint',
  'InsurancePlan.identifier': 'identifier',
  name: 'name',
  alias: 'name',
  'InsurancePlan.ownedBy': 'owned-by',
  'InsurancePlan.name': 'phonetic',
  'InsurancePlan.status': 'status',
  'InsurancePlan.type': 'type',
  'Invoice.account': 'account',
  'Invoice.date': 'date',
  'Invoice.identifier': 'identifier',
  'Invoice.issuer': 'issuer',
  'Invoice.participant.actor': 'participant',
  'Invoice.participant.role': 'participant-role',
  'Invoice.subject.where(resolve() is Patient)': 'patient',
  'Invoice.recipient': 'recipient',
  'Invoice.status': 'status',
  'Invoice.subject': 'subject',
  'Invoice.totalGross': 'totalgross',
  'Invoice.totalNet': 'totalnet',
  'Invoice.type': 'type',
  "Library.relatedArtifact.where(type='composed-of').resource": 'composed-of',
  'Library.content.contentType': 'content-type',
  '(Library.useContext.value as CodeableConcept)': 'context',
  '(Library.useContext.value as Quantity)': 'context-quantity',
  '(Library.useContext.value as Range)': 'context-quantity',
  'Library.useContext.code': 'context-type',
  'Library.date': 'date',
  "Library.relatedArtifact.where(type='depends-on').resource": 'depends-on',
  "Library.relatedArtifact.where(type='derived-from').resource": 'derived-from',
  'Library.description': 'description',
  'Library.effectivePeriod': 'effective',
  'Library.identifier': 'identifier',
  'Library.jurisdiction': 'jurisdiction',
  'Library.name': 'name',
  "Library.relatedArtifact.where(type='predecessor').resource": 'predecessor',
  'Library.publisher': 'publisher',
  'Library.status': 'status',
  "Library.relatedArtifact.where(type='successor').resource": 'successor',
  'Library.title': 'title',
  'Library.topic': 'topic',
  'Library.type': 'type',
  'Library.url': 'url',
  'Library.version': 'version',
  'Library.useContext': 'context-type-value',
  'Linkage.author': 'author',
  'Linkage.item.resource': 'source',
  'List.emptyReason': 'empty-reason',
  'List.entry.item': 'item',
  'List.note.text': 'notes',
  'List.source': 'source',
  'List.status': 'status',
  'List.subject': 'subject',
  'List.title': 'title',
  'Location.address': 'address',
  'Location.address.city': 'address-city',
  'Location.address.country': 'address-country',
  'Location.address.postalCode': 'address-postalcode',
  'Location.address.state': 'address-state',
  'Location.address.use': 'address-use',
  'Location.endpoint': 'endpoint',
  'Location.identifier': 'identifier',
  'Location.name': 'name',
  'Location.alias': 'name',
  'Location.position': 'near',
  'Location.operationalStatus': 'operational-status',
  'Location.managingOrganization': 'organization',
  'Location.partOf': 'partof',
  'Location.status': 'status',
  'Location.type': 'type',
  "Measure.relatedArtifact.where(type='composed-of').resource": 'composed-of',
  '(Measure.useContext.value as CodeableConcept)': 'context',
  '(Measure.useContext.value as Quantity)': 'context-quantity',
  '(Measure.useContext.value as Range)': 'context-quantity',
  'Measure.useContext.code': 'context-type',
  'Measure.date': 'date',
  "Measure.relatedArtifact.where(type='depends-on').resource": 'depends-on',
  'Measure.library': 'depends-on',
  "Measure.relatedArtifact.where(type='derived-from').resource": 'derived-from',
  'Measure.description': 'description',
  'Measure.effectivePeriod': 'effective',
  'Measure.identifier': 'identifier',
  'Measure.jurisdiction': 'jurisdiction',
  'Measure.name': 'name',
  "Measure.relatedArtifact.where(type='predecessor').resource": 'predecessor',
  'Measure.publisher': 'publisher',
  'Measure.status': 'status',
  "Measure.relatedArtifact.where(type='successor').resource": 'successor',
  'Measure.title': 'title',
  'Measure.topic': 'topic',
  'Measure.url': 'url',
  'Measure.version': 'version',
  'Measure.useContext': 'context-type-value',
  'MeasureReport.date': 'date',
  'MeasureReport.evaluatedResource': 'evaluated-resource',
  'MeasureReport.identifier': 'identifier',
  'MeasureReport.measure': 'measure',
  'MeasureReport.subject.where(resolve() is Patient)': 'patient',
  'MeasureReport.period': 'period',
  'MeasureReport.reporter': 'reporter',
  'MeasureReport.status': 'status',
  'MeasureReport.subject': 'subject',
  'Media.basedOn': 'based-on',
  'Media.created': 'created',
  'Media.device': 'device',
  'Media.encounter': 'encounter',
  'Media.identifier': 'identifier',
  'Media.modality': 'modality',
  'Media.operator': 'operator',
  'Media.subject.where(resolve() is Patient)': 'patient',
  'Media.bodySite': 'site',
  'Media.status': 'status',
  'Media.subject': 'subject',
  'Media.type': 'type',
  'Media.view': 'view',
  'Medication.batch.expirationDate': 'expiration-date',
  'Medication.form': 'form',
  'Medication.identifier': 'identifier',
  '(Medication.ingredient.item as Reference)': 'ingredient',
  '(Medication.ingredient.item as CodeableConcept)': 'ingredient-code',
  'Medication.batch.lotNumber': 'lot-number',
  'Medication.manufacturer': 'manufacturer',
  'Medication.status': 'status',
  'MedicationAdministration.context': 'context',
  'MedicationAdministration.device': 'device',
  'MedicationAdministration.effective': 'effective-time',
  '(MedicationAdministration.medication as Reference)': 'medication',
  '(MedicationDispense.medication as Reference)': 'medication',
  '(MedicationRequest.medication as Reference)': 'medication',
  '(MedicationStatement.medication as Reference)': 'medication',
  'MedicationAdministration.performer.actor': 'performer',
  'MedicationAdministration.reasonCode': 'reason-given',
  'MedicationAdministration.statusReason': 'reason-not-given',
  'MedicationAdministration.request': 'request',
  'MedicationAdministration.status': 'status',
  'MedicationDispense.status': 'status',
  'MedicationRequest.status': 'status',
  'MedicationStatement.status': 'status',
  'MedicationAdministration.subject': 'subject',
  'MedicationDispense.context': 'context',
  'MedicationDispense.destination': 'destination',
  'MedicationDispense.performer.actor': 'performer',
  'MedicationDispense.authorizingPrescription': 'prescription',
  'MedicationDispense.receiver': 'receiver',
  'MedicationDispense.substitution.responsibleParty': 'responsibleparty',
  'MedicationDispense.subject': 'subject',
  'MedicationDispense.type': 'type',
  'MedicationDispense.whenHandedOver': 'whenhandedover',
  'MedicationDispense.whenPrepared': 'whenprepared',
  'MedicationKnowledge.medicineClassification.classification': 'classification',
  'MedicationKnowledge.medicineClassification.type': 'classification-type',
  'MedicationKnowledge.code': 'code',
  'MedicationKnowledge.doseForm': 'doseform',
  '(MedicationKnowledge.ingredient.item as Reference)': 'ingredient',
  '(MedicationKnowledge.ingredient.item as CodeableConcept)': 'ingredient-code',
  'MedicationKnowledge.manufacturer': 'manufacturer',
  'MedicationKnowledge.monitoringProgram.name': 'monitoring-program-name',
  'MedicationKnowledge.monitoringProgram.type': 'monitoring-program-type',
  'MedicationKnowledge.monograph.source': 'monograph',
  'MedicationKnowledge.monograph.type': 'monograph-type',
  'MedicationKnowledge.cost.source': 'source-cost',
  'MedicationKnowledge.status': 'status',
  'MedicationRequest.authoredOn': 'authoredon',
  'MedicationRequest.category': 'category',
  'MedicationRequest.dosageInstruction.timing.event': 'date',
  'MedicationRequest.encounter': 'encounter',
  'MedicationRequest.dispenseRequest.performer': 'intended-dispenser',
  'MedicationRequest.performer': 'intended-performer',
  'MedicationRequest.performerType': 'intended-performertype',
  'MedicationRequest.intent': 'intent',
  'MedicationRequest.priority': 'priority',
  'MedicationRequest.requester': 'requester',
  'MedicationRequest.subject': 'subject',
  'MedicationStatement.category': 'category',
  'MedicationStatement.context': 'context',
  'MedicationStatement.effective': 'effective',
  'MedicationStatement.partOf': 'part-of',
  'MedicationStatement.informationSource': 'source',
  'MedicationStatement.subject': 'subject',
  'MedicinalProduct.identifier': 'identifier',
  'MedicinalProduct.name.productName': 'name',
  'MedicinalProduct.name.countryLanguage.language': 'name-language',
  'MedicinalProductAuthorization.country': 'country',
  'MedicinalProductAuthorization.holder': 'holder',
  'MedicinalProductAuthorization.identifier': 'identifier',
  'MedicinalProductAuthorization.status': 'status',
  'MedicinalProductAuthorization.subject': 'subject',
  'MedicinalProductContraindication.subject': 'subject',
  'MedicinalProductIndication.subject': 'subject',
  'MedicinalProductInteraction.subject': 'subject',
  'MedicinalProductPackaged.identifier': 'identifier',
  'MedicinalProductPackaged.subject': 'subject',
  'MedicinalProductPharmaceutical.identifier': 'identifier',
  'MedicinalProductPharmaceutical.routeOfAdministration.code': 'route',
  'MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.code': 'target-species',
  'MedicinalProductUndesirableEffect.subject': 'subject',
  'MessageDefinition.category': 'category',
  'MessageDefinition.event': 'event',
  'MessageDefinition.focus.code': 'focus',
  'MessageDefinition.parent': 'parent',
  'MessageHeader.author': 'author',
  'MessageHeader.response.code': 'code',
  'MessageHeader.destination.name': 'destination',
  'MessageHeader.destination.endpoint': 'destination-uri',
  'MessageHeader.enterer': 'enterer',
  'MessageHeader.event': 'event',
  'MessageHeader.focus': 'focus',
  'MessageHeader.destination.receiver': 'receiver',
  'MessageHeader.response.identifier': 'response-id',
  'MessageHeader.responsible': 'responsible',
  'MessageHeader.sender': 'sender',
  'MessageHeader.source.name': 'source',
  'MessageHeader.source.endpoint': 'source-uri',
  'MessageHeader.destination.target': 'target',
  'MolecularSequence.referenceSeq.chromosome': 'chromosome',
  'MolecularSequence.identifier': 'identifier',
  'MolecularSequence.patient': 'patient',
  'MolecularSequence.referenceSeq.referenceSeqId': 'referenceseqid',
  'MolecularSequence.type': 'type',
  'MolecularSequence.variant.end': 'variant-end',
  'MolecularSequence.variant.start': 'variant-start',
  'MolecularSequence.referenceSeq.windowEnd': 'window-end',
  'MolecularSequence.referenceSeq.windowStart': 'window-start',
  'MolecularSequence.variant': 'referenceseqid-variant-coordinate',
  'MolecularSequence.referenceSeq': 'referenceseqid-window-coordinate',
  'NamingSystem.contact.name': 'contact',
  'NamingSystem.uniqueId.type': 'id-type',
  'NamingSystem.kind': 'kind',
  'NamingSystem.uniqueId.period': 'period',
  'NamingSystem.responsible': 'responsible',
  'NamingSystem.contact.telecom': 'telecom',
  'NamingSystem.type': 'type',
  'NamingSystem.uniqueId.value': 'value',
  'NutritionOrder.enteralFormula.additiveType': 'additive',
  'NutritionOrder.dateTime': 'datetime',
  'NutritionOrder.enteralFormula.baseFormulaType': 'formula',
  'NutritionOrder.instantiatesCanonical': 'instantiates-canonical',
  'NutritionOrder.instantiatesUri': 'instantiates-uri',
  'NutritionOrder.oralDiet.type': 'oraldiet',
  'NutritionOrder.orderer': 'provider',
  'NutritionOrder.status': 'status',
  'NutritionOrder.supplement.type': 'supplement',
  'Observation.basedOn': 'based-on',
  'Observation.category': 'category',
  'Observation.component.code': 'component-code',
  'Observation.dataAbsentReason': 'data-absent-reason',
  'Observation.component.dataAbsentReason': 'component-data-absent-reason',
  '(Observation.value as CodeableConcept)': 'value-concept',
  '(Observation.component.value as CodeableConcept)': 'component-value-concept',
  '(Observation.value as Quantity)': 'value-quantity',
  '(Observation.value as SampledData)': 'value-quantity',
  '(Observation.component.value as Quantity)': 'component-value-quantity',
  '(Observation.component.value as SampledData)': 'component-value-quantity',
  'Observation.derivedFrom': 'derived-from',
  'Observation.device': 'device',
  'Observation.focus': 'focus',
  'Observation.hasMember': 'has-member',
  'Observation.method': 'method',
  'Observation.partOf': 'part-of',
  'Observation.performer': 'performer',
  'Observation.specimen': 'specimen',
  'Observation.status': 'status',
  'Observation.subject': 'subject',
  '(Observation.value as dateTime)': 'value-date',
  '(Observation.value as Period)': 'value-date',
  '(Observation.value as string)': 'value-string',
  '(Observation.value as CodeableConcept).text': 'value-string',
  Observation: 'combo-code-value-quantity',
  'Observation.component': 'component-code-value-quantity',
  'OperationDefinition.base': 'base',
  'OperationDefinition.code': 'code',
  'OperationDefinition.inputProfile': 'input-profile',
  'OperationDefinition.instance': 'instance',
  'OperationDefinition.kind': 'kind',
  'OperationDefinition.outputProfile': 'output-profile',
  'OperationDefinition.system': 'system',
  'OperationDefinition.type': 'type',
  'Organization.active': 'active',
  'Organization.address': 'address',
  'Organization.address.city': 'address-city',
  'Organization.address.country': 'address-country',
  'Organization.address.postalCode': 'address-postalcode',
  'Organization.address.state': 'address-state',
  'Organization.address.use': 'address-use',
  'Organization.endpoint': 'endpoint',
  'Organization.identifier': 'identifier',
  'Organization.name': 'phonetic',
  'Organization.alias': 'name',
  'Organization.partOf': 'partof',
  'Organization.type': 'type',
  'OrganizationAffiliation.active': 'active',
  'OrganizationAffiliation.period': 'date',
  "OrganizationAffiliation.telecom.where(system='email')": 'email',
  'OrganizationAffiliation.endpoint': 'endpoint',
  'OrganizationAffiliation.identifier': 'identifier',
  'OrganizationAffiliation.location': 'location',
  'OrganizationAffiliation.network': 'network',
  'OrganizationAffiliation.participatingOrganization': 'participating-organization',
  "OrganizationAffiliation.telecom.where(system='phone')": 'phone',
  'OrganizationAffiliation.organization': 'primary-organization',
  'OrganizationAffiliation.code': 'role',
  'OrganizationAffiliation.healthcareService': 'service',
  'OrganizationAffiliation.specialty': 'specialty',
  'OrganizationAffiliation.telecom': 'telecom',
  'Patient.active': 'active',
  'Patient.address': 'address',
  'Person.address': 'address',
  'Practitioner.address': 'address',
  'RelatedPerson.address': 'address',
  'Patient.address.city': 'address-city',
  'Person.address.city': 'address-city',
  'Practitioner.address.city': 'address-city',
  'RelatedPerson.address.city': 'address-city',
  'Patient.address.country': 'address-country',
  'Person.address.country': 'address-country',
  'Practitioner.address.country': 'address-country',
  'RelatedPerson.address.country': 'address-country',
  'Patient.address.postalCode': 'address-postalcode',
  'Person.address.postalCode': 'address-postalcode',
  'Practitioner.address.postalCode': 'address-postalcode',
  'RelatedPerson.address.postalCode': 'address-postalcode',
  'Patient.address.state': 'address-state',
  'Person.address.state': 'address-state',
  'Practitioner.address.state': 'address-state',
  'RelatedPerson.address.state': 'address-state',
  'Patient.address.use': 'address-use',
  'Person.address.use': 'address-use',
  'Practitioner.address.use': 'address-use',
  'RelatedPerson.address.use': 'address-use',
  'Patient.birthDate': 'birthdate',
  'Person.birthDate': 'birthdate',
  'RelatedPerson.birthDate': 'birthdate',
  '(Patient.deceased as dateTime)': 'death-date',
  'Patient.deceased.exists() and Patient.deceased != false': 'deceased',
  "Patient.telecom.where(system='email')": 'email',
  "Person.telecom.where(system='email')": 'email',
  "Practitioner.telecom.where(system='email')": 'email',
  "PractitionerRole.telecom.where(system='email')": 'email',
  "RelatedPerson.telecom.where(system='email')": 'email',
  'Patient.name.family': 'family',
  'Practitioner.name.family': 'family',
  'Patient.gender': 'gender',
  'Person.gender': 'gender',
  'Practitioner.gender': 'gender',
  'RelatedPerson.gender': 'gender',
  'Patient.generalPractitioner': 'general-practitioner',
  'Patient.name.given': 'given',
  'Practitioner.name.given': 'given',
  'Patient.identifier': 'identifier',
  'Patient.communication.language': 'language',
  'Patient.link.other': 'link',
  'Patient.name': 'phonetic',
  'Patient.managingOrganization': 'organization',
  "Patient.telecom.where(system='phone')": 'phone',
  "Person.telecom.where(system='phone')": 'phone',
  "Practitioner.telecom.where(system='phone')": 'phone',
  "PractitionerRole.telecom.where(system='phone')": 'phone',
  "RelatedPerson.telecom.where(system='phone')": 'phone',
  'Person.name': 'name',
  'Practitioner.name': 'name',
  'RelatedPerson.name': 'name',
  'Patient.telecom': 'telecom',
  'Person.telecom': 'telecom',
  'Practitioner.telecom': 'telecom',
  'PractitionerRole.telecom': 'telecom',
  'RelatedPerson.telecom': 'telecom',
  'PaymentNotice.created': 'created',
  'PaymentNotice.identifier': 'identifier',
  'PaymentNotice.paymentStatus': 'payment-status',
  'PaymentNotice.provider': 'provider',
  'PaymentNotice.request': 'request',
  'PaymentNotice.response': 'response',
  'PaymentNotice.status': 'status',
  'PaymentReconciliation.created': 'created',
  'PaymentReconciliation.disposition': 'disposition',
  'PaymentReconciliation.identifier': 'identifier',
  'PaymentReconciliation.outcome': 'outcome',
  'PaymentReconciliation.paymentIssuer': 'payment-issuer',
  'PaymentReconciliation.request': 'request',
  'PaymentReconciliation.requestor': 'requestor',
  'PaymentReconciliation.status': 'status',
  'Person.identifier': 'identifier',
  'Person.link.target': 'link',
  'Person.managingOrganization': 'organization',
  'Person.link.target.where(resolve() is Patient)': 'patient',
  'Person.link.target.where(resolve() is Practitioner)': 'practitioner',
  'Person.link.target.where(resolve() is RelatedPerson)': 'relatedperson',
  "PlanDefinition.relatedArtifact.where(type='composed-of').resource": 'composed-of',
  '(PlanDefinition.useContext.value as CodeableConcept)': 'context',
  '(PlanDefinition.useContext.value as Quantity)': 'context-quantity',
  '(PlanDefinition.useContext.value as Range)': 'context-quantity',
  'PlanDefinition.useContext.code': 'context-type',
  'PlanDefinition.date': 'date',
  'PlanDefinition.action.definition': 'definition',
  "PlanDefinition.relatedArtifact.where(type='depends-on').resource": 'depends-on',
  'PlanDefinition.library': 'depends-on',
  "PlanDefinition.relatedArtifact.where(type='derived-from').resource": 'derived-from',
  'PlanDefinition.description': 'description',
  'PlanDefinition.effectivePeriod': 'effective',
  'PlanDefinition.identifier': 'identifier',
  'PlanDefinition.jurisdiction': 'jurisdiction',
  'PlanDefinition.name': 'name',
  "PlanDefinition.relatedArtifact.where(type='predecessor').resource": 'predecessor',
  'PlanDefinition.publisher': 'publisher',
  'PlanDefinition.status': 'status',
  "PlanDefinition.relatedArtifact.where(type='successor').resource": 'successor',
  'PlanDefinition.title': 'title',
  'PlanDefinition.topic': 'topic',
  'PlanDefinition.type': 'type',
  'PlanDefinition.url': 'url',
  'PlanDefinition.version': 'version',
  'PlanDefinition.useContext': 'context-type-value',
  'Practitioner.active': 'active',
  'Practitioner.communication': 'communication',
  'Practitioner.identifier': 'identifier',
  'PractitionerRole.active': 'active',
  'PractitionerRole.period': 'date',
  'PractitionerRole.endpoint': 'endpoint',
  'PractitionerRole.identifier': 'identifier',
  'PractitionerRole.location': 'location',
  'PractitionerRole.organization': 'organization',
  'PractitionerRole.practitioner': 'practitioner',
  'PractitionerRole.code': 'role',
  'PractitionerRole.healthcareService': 'service',
  'PractitionerRole.specialty': 'specialty',
  'Procedure.basedOn': 'based-on',
  'Procedure.category': 'category',
  'Procedure.instantiatesCanonical': 'instantiates-canonical',
  'Procedure.instantiatesUri': 'instantiates-uri',
  'Procedure.location': 'location',
  'Procedure.partOf': 'part-of',
  'Procedure.performer.actor': 'performer',
  'Procedure.reasonCode': 'reason-code',
  'Procedure.reasonReference': 'reason-reference',
  'Procedure.status': 'status',
  'Procedure.subject': 'subject',
  'Provenance.agent.who': 'agent',
  'Provenance.agent.role': 'agent-role',
  'Provenance.agent.type': 'agent-type',
  'Provenance.entity.what': 'entity',
  'Provenance.location': 'location',
  'Provenance.target.where(resolve() is Patient)': 'patient',
  'Provenance.recorded': 'recorded',
  'Provenance.signature.type': 'signature-type',
  'Provenance.target': 'target',
  '(Provenance.occurred as dateTime)': 'when',
  'Questionnaire.item.code': 'code',
  '(Questionnaire.useContext.value as CodeableConcept)': 'context',
  '(Questionnaire.useContext.value as Quantity)': 'context-quantity',
  '(Questionnaire.useContext.value as Range)': 'context-quantity',
  'Questionnaire.useContext.code': 'context-type',
  'Questionnaire.date': 'date',
  'Questionnaire.item.definition': 'definition',
  'Questionnaire.description': 'description',
  'Questionnaire.effectivePeriod': 'effective',
  'Questionnaire.identifier': 'identifier',
  'Questionnaire.jurisdiction': 'jurisdiction',
  'Questionnaire.name': 'name',
  'Questionnaire.publisher': 'publisher',
  'Questionnaire.status': 'status',
  'Questionnaire.subjectType': 'subject-type',
  'Questionnaire.title': 'title',
  'Questionnaire.url': 'url',
  'Questionnaire.version': 'version',
  'Questionnaire.useContext': 'context-type-value',
  'QuestionnaireResponse.author': 'author',
  'QuestionnaireResponse.authored': 'authored',
  'QuestionnaireResponse.basedOn': 'based-on',
  'QuestionnaireResponse.encounter': 'encounter',
  'QuestionnaireResponse.identifier': 'identifier',
  'QuestionnaireResponse.partOf': 'part-of',
  'QuestionnaireResponse.subject.where(resolve() is Patient)': 'patient',
  'QuestionnaireResponse.questionnaire': 'questionnaire',
  'QuestionnaireResponse.source': 'source',
  'QuestionnaireResponse.status': 'status',
  'QuestionnaireResponse.subject': 'subject',
  'RelatedPerson.active': 'active',
  'RelatedPerson.identifier': 'identifier',
  'RelatedPerson.patient': 'patient',
  'RelatedPerson.relationship': 'relationship',
  'RequestGroup.author': 'author',
  'RequestGroup.authoredOn': 'authored',
  'RequestGroup.code': 'code',
  'RequestGroup.encounter': 'encounter',
  'RequestGroup.groupIdentifier': 'group-identifier',
  'RequestGroup.identifier': 'identifier',
  'RequestGroup.instantiatesCanonical': 'instantiates-canonical',
  'RequestGroup.instantiatesUri': 'instantiates-uri',
  'RequestGroup.intent': 'intent',
  'RequestGroup.action.participant': 'participant',
  'RequestGroup.subject.where(resolve() is Patient)': 'patient',
  'RequestGroup.priority': 'priority',
  'RequestGroup.status': 'status',
  'RequestGroup.subject': 'subject',
  "ResearchDefinition.relatedArtifact.where(type='composed-of').resource": 'composed-of',
  '(ResearchDefinition.useContext.value as CodeableConcept)': 'context',
  '(ResearchDefinition.useContext.value as Quantity)': 'context-quantity',
  '(ResearchDefinition.useContext.value as Range)': 'context-quantity',
  'ResearchDefinition.useContext.code': 'context-type',
  'ResearchDefinition.date': 'date',
  "ResearchDefinition.relatedArtifact.where(type='depends-on').resource": 'depends-on',
  'ResearchDefinition.library': 'depends-on',
  "ResearchDefinition.relatedArtifact.where(type='derived-from').resource": 'derived-from',
  'ResearchDefinition.description': 'description',
  'ResearchDefinition.effectivePeriod': 'effective',
  'ResearchDefinition.identifier': 'identifier',
  'ResearchDefinition.jurisdiction': 'jurisdiction',
  'ResearchDefinition.name': 'name',
  "ResearchDefinition.relatedArtifact.where(type='predecessor').resource": 'predecessor',
  'ResearchDefinition.publisher': 'publisher',
  'ResearchDefinition.status': 'status',
  "ResearchDefinition.relatedArtifact.where(type='successor').resource": 'successor',
  'ResearchDefinition.title': 'title',
  'ResearchDefinition.topic': 'topic',
  'ResearchDefinition.url': 'url',
  'ResearchDefinition.version': 'version',
  'ResearchDefinition.useContext': 'context-type-value',
  "ResearchElementDefinition.relatedArtifact.where(type='composed-of').resource": 'composed-of',
  '(ResearchElementDefinition.useContext.value as CodeableConcept)': 'context',
  '(ResearchElementDefinition.useContext.value as Quantity)': 'context-quantity',
  '(ResearchElementDefinition.useContext.value as Range)': 'context-quantity',
  'ResearchElementDefinition.useContext.code': 'context-type',
  'ResearchElementDefinition.date': 'date',
  "ResearchElementDefinition.relatedArtifact.where(type='depends-on').resource": 'depends-on',
  'ResearchElementDefinition.library': 'depends-on',
  "ResearchElementDefinition.relatedArtifact.where(type='derived-from').resource": 'derived-from',
  'ResearchElementDefinition.description': 'description',
  'ResearchElementDefinition.effectivePeriod': 'effective',
  'ResearchElementDefinition.identifier': 'identifier',
  'ResearchElementDefinition.jurisdiction': 'jurisdiction',
  'ResearchElementDefinition.name': 'name',
  "ResearchElementDefinition.relatedArtifact.where(type='predecessor').resource": 'predecessor',
  'ResearchElementDefinition.publisher': 'publisher',
  'ResearchElementDefinition.status': 'status',
  "ResearchElementDefinition.relatedArtifact.where(type='successor').resource": 'successor',
  'ResearchElementDefinition.title': 'title',
  'ResearchElementDefinition.topic': 'topic',
  'ResearchElementDefinition.url': 'url',
  'ResearchElementDefinition.version': 'version',
  'ResearchElementDefinition.useContext': 'context-type-value',
  'ResearchStudy.category': 'category',
  'ResearchStudy.period': 'date',
  'ResearchStudy.focus': 'focus',
  'ResearchStudy.identifier': 'identifier',
  'ResearchStudy.keyword': 'keyword',
  'ResearchStudy.location': 'location',
  'ResearchStudy.partOf': 'partof',
  'ResearchStudy.principalInvestigator': 'principalinvestigator',
  'ResearchStudy.protocol': 'protocol',
  'ResearchStudy.site': 'site',
  'ResearchStudy.sponsor': 'sponsor',
  'ResearchStudy.status': 'status',
  'ResearchStudy.title': 'title',
  'ResearchSubject.period': 'date',
  'ResearchSubject.identifier': 'identifier',
  'ResearchSubject.individual': 'patient',
  'ResearchSubject.status': 'status',
  'ResearchSubject.study': 'study',
  'RiskAssessment.condition': 'condition',
  'RiskAssessment.method': 'method',
  'RiskAssessment.performer': 'performer',
  'RiskAssessment.prediction.probability': 'probability',
  'RiskAssessment.prediction.qualitativeRisk': 'risk',
  'RiskAssessment.subject': 'subject',
  '(RiskEvidenceSynthesis.useContext.value as CodeableConcept)': 'context',
  '(RiskEvidenceSynthesis.useContext.value as Quantity)': 'context-quantity',
  '(RiskEvidenceSynthesis.useContext.value as Range)': 'context-quantity',
  'RiskEvidenceSynthesis.useContext.code': 'context-type',
  'RiskEvidenceSynthesis.date': 'date',
  'RiskEvidenceSynthesis.description': 'description',
  'RiskEvidenceSynthesis.effectivePeriod': 'effective',
  'RiskEvidenceSynthesis.identifier': 'identifier',
  'RiskEvidenceSynthesis.jurisdiction': 'jurisdiction',
  'RiskEvidenceSynthesis.name': 'name',
  'RiskEvidenceSynthesis.publisher': 'publisher',
  'RiskEvidenceSynthesis.status': 'status',
  'RiskEvidenceSynthesis.title': 'title',
  'RiskEvidenceSynthesis.url': 'url',
  'RiskEvidenceSynthesis.version': 'version',
  'RiskEvidenceSynthesis.useContext': 'context-type-value',
  'Schedule.active': 'active',
  'Schedule.actor': 'actor',
  'Schedule.planningHorizon': 'date',
  'Schedule.identifier': 'identifier',
  'Schedule.serviceCategory': 'service-category',
  'Schedule.serviceType': 'service-type',
  'Schedule.specialty': 'specialty',
  'SearchParameter.base': 'base',
  'SearchParameter.code': 'code',
  'SearchParameter.component.definition': 'component',
  'SearchParameter.derivedFrom': 'derived-from',
  'SearchParameter.target': 'target',
  'SearchParameter.type': 'type',
  'ServiceRequest.authoredOn': 'authored',
  'ServiceRequest.basedOn': 'based-on',
  'ServiceRequest.bodySite': 'body-site',
  'ServiceRequest.category': 'category',
  'ServiceRequest.instantiatesCanonical': 'instantiates-canonical',
  'ServiceRequest.instantiatesUri': 'instantiates-uri',
  'ServiceRequest.intent': 'intent',
  'ServiceRequest.occurrence': 'occurrence',
  'ServiceRequest.performer': 'performer',
  'ServiceRequest.performerType': 'performer-type',
  'ServiceRequest.priority': 'priority',
  'ServiceRequest.replaces': 'replaces',
  'ServiceRequest.requester': 'requester',
  'ServiceRequest.requisition': 'requisition',
  'ServiceRequest.specimen': 'specimen',
  'ServiceRequest.status': 'status',
  'ServiceRequest.subject': 'subject',
  'Slot.appointmentType': 'appointment-type',
  'Slot.identifier': 'identifier',
  'Slot.schedule': 'schedule',
  'Slot.serviceCategory': 'service-category',
  'Slot.serviceType': 'service-type',
  'Slot.specialty': 'specialty',
  'Slot.start': 'start',
  'Slot.status': 'status',
  'Specimen.accessionIdentifier': 'accession',
  'Specimen.collection.bodySite': 'bodysite',
  'Specimen.collection.collected': 'collected',
  'Specimen.collection.collector': 'collector',
  'Specimen.container.type': 'container',
  'Specimen.container.identifier': 'container-id',
  'Specimen.identifier': 'identifier',
  'Specimen.parent': 'parent',
  'Specimen.subject.where(resolve() is Patient)': 'patient',
  'Specimen.status': 'status',
  'Specimen.subject': 'subject',
  'Specimen.type': 'type',
  'SpecimenDefinition.typeTested.container.type': 'container',
  'SpecimenDefinition.identifier': 'identifier',
  'SpecimenDefinition.typeCollected': 'type',
  'StructureDefinition.abstract': 'abstract',
  'StructureDefinition.baseDefinition': 'base',
  'StructureDefinition.snapshot.element.base.path': 'base-path',
  'StructureDefinition.differential.element.base.path': 'base-path',
  'StructureDefinition.derivation': 'derivation',
  'StructureDefinition.experimental': 'experimental',
  'StructureDefinition.context.type': 'ext-context',
  'StructureDefinition.keyword': 'keyword',
  'StructureDefinition.kind': 'kind',
  'StructureDefinition.snapshot.element.path': 'path',
  'StructureDefinition.differential.element.path': 'path',
  'StructureDefinition.type': 'type',
  'StructureDefinition.snapshot.element.binding.valueSet': 'valueset',
  'Subscription.contact': 'contact',
  'Subscription.criteria': 'criteria',
  'Subscription.channel.payload': 'payload',
  'Subscription.status': 'status',
  'Subscription.channel.type': 'type',
  'Subscription.channel.endpoint': 'url',
  'Substance.category': 'category',
  'Substance.code': 'code',
  '(Substance.ingredient.substance as CodeableConcept)': 'code',
  'Substance.instance.identifier': 'container-identifier',
  'Substance.instance.expiry': 'expiry',
  'Substance.identifier': 'identifier',
  'Substance.instance.quantity': 'quantity',
  'Substance.status': 'status',
  '(Substance.ingredient.substance as Reference)': 'substance-reference',
  'SubstanceSpecification.code.code': 'code',
  'SupplyDelivery.receiver': 'receiver',
  'SupplyDelivery.status': 'status',
  'SupplyDelivery.supplier': 'supplier',
  'SupplyRequest.category': 'category',
  'SupplyRequest.requester': 'requester',
  'SupplyRequest.status': 'status',
  'SupplyRequest.deliverTo': 'subject',
  'SupplyRequest.supplier': 'supplier',
  'Task.authoredOn': 'authored-on',
  'Task.basedOn': 'based-on',
  'Task.businessStatus': 'business-status',
  'Task.code': 'code',
  'Task.encounter': 'encounter',
  'Task.focus': 'focus',
  'Task.groupIdentifier': 'group-identifier',
  'Task.identifier': 'identifier',
  'Task.intent': 'intent',
  'Task.lastModified': 'modified',
  'Task.owner': 'owner',
  'Task.partOf': 'part-of',
  'Task.for.where(resolve() is Patient)': 'patient',
  'Task.performerType': 'performer',
  'Task.executionPeriod': 'period',
  'Task.priority': 'priority',
  'Task.requester': 'requester',
  'Task.status': 'status',
  'Task.for': 'subject',
  'TestReport.identifier': 'identifier',
  'TestReport.issued': 'issued',
  'TestReport.participant.uri': 'participant',
  'TestReport.result': 'result',
  'TestReport.tester': 'tester',
  'TestReport.testScript': 'testscript',
  '(TestScript.useContext.value as CodeableConcept)': 'context',
  '(TestScript.useContext.value as Quantity)': 'context-quantity',
  '(TestScript.useContext.value as Range)': 'context-quantity',
  'TestScript.useContext.code': 'context-type',
  'TestScript.date': 'date',
  'TestScript.description': 'description',
  'TestScript.identifier': 'identifier',
  'TestScript.jurisdiction': 'jurisdiction',
  'TestScript.name': 'name',
  'TestScript.publisher': 'publisher',
  'TestScript.status': 'status',
  'TestScript.metadata.capability.description': 'testscript-capability',
  'TestScript.title': 'title',
  'TestScript.url': 'url',
  'TestScript.version': 'version',
  'TestScript.useContext': 'context-type-value',
  'ValueSet.expansion.contains.code': 'code',
  'ValueSet.compose.include.concept.code': 'code',
  'ValueSet.expansion.identifier': 'expansion',
  'ValueSet.compose.include.system': 'reference',
  'VerificationResult.target': 'target',
  'VisionPrescription.dateWritten': 'datewritten',
  'VisionPrescription.prescriber': 'prescriber',
  'VisionPrescription.status': 'status'
};
